C51 COMPILER V9.54   MUSIC_KEYBOARD                                                        01/08/2024 22:40:08 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MUSIC_KEYBOARD
OBJECT MODULE PLACED IN .\Objects\Music Keyboard.obj
COMPILER INVOKED BY: D:\Program Files\Keil_v5\C51\BIN\C51.EXE Music Keyboard.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTE
                    -ND PRINT(.\Listings\Music Keyboard.lst) TABS(2) OBJECT(.\Objects\Music Keyboard.obj)

line level    source

   1          #include<REGX52.H>
   2          #include<Timer0.c>
   3          
   4          #define GPIO_DIG P0
   5          #define GPIO_KEY P1
   6          
   7          sbit Buzzer=P2^5;
   8          
   9          typedef unsigned char u8;
  10          typedef unsigned int u16;
  11          
  12          u8 freq_select;//频率选择索引
  13          u16 FreqTable[36]=
  14          {
  15                            63628,63731,63835,63928,64021,64103,64185,64260,64331,64400,64463,64528,//低音段
  16                            64580,64633,64684,64732,64777,64820,64860,64898,64934,64968,65000,65030,//中音段
  17                            65058,65085,65110,65134,65157,65178,65198,65217,65235,65252,65268,65283 //高音段
  18          };//索引与频率对照表
  19          
  20          void delay(u16 i)//延迟函数
  21          {
  22   1        while(i--);
  23   1      }
  24          
  25          KeyDown(void)//矩阵键盘扫描函数
  26          {
  27   1        u8 KeyValue=0x00;
  28   1        GPIO_KEY=0x0f;
  29   1        if(GPIO_KEY!=0x0f)
  30   1        {
  31   2          delay(1000);
  32   2          if(GPIO_KEY!=0x0f)
  33   2          {
  34   3            GPIO_KEY=0x0f;
  35   3            switch(GPIO_KEY)
  36   3            {
  37   4              case(0x07):KeyValue=0x00;break;
  38   4              case(0x0b):KeyValue=0x01;break;
  39   4              case(0x0d):KeyValue=0x02;break;
  40   4              case(0x0e):KeyValue=0x03;break;
  41   4            }
  42   3            GPIO_KEY=0xf0;
  43   3            switch(GPIO_KEY)
  44   3            {
  45   4              case(0x70):break;
  46   4              case(0xb0):KeyValue+=0x04;break;
  47   4              case(0xd0):KeyValue+=0x08;break;
  48   4              case(0xe0):KeyValue+=0x0c;break;
  49   4            }
  50   3          }
  51   2        }
  52   1        return KeyValue;
  53   1      }
  54          
C51 COMPILER V9.54   MUSIC_KEYBOARD                                                        01/08/2024 22:40:08 PAGE 2   

  55          void Timer0_Routine() interrupt 1//定时器中断函数
  56          {
  57   1        /*取对应频率值的重装载值到定时器*/
  58   1        TL0 = FreqTable[freq_select]%256;   //设置定时初值
  59   1        TH0 = FreqTable[freq_select]/256;   //设置定时初值
  60   1        Buzzer=!Buzzer; //翻转蜂鸣器IO口
  61   1      }
  62          
  63          void main()
  64          {
  65   1        u8 position,key_down;
  66   1        position=1;//初始选择中音段
  67   1        Timer0Init();//定时器初始化
  68   1        EA=0;//关中断
  69   1        while(1)//主循环
  70   1        {
  71   2          key_down=KeyDown();//矩阵键盘取值
  72   2          if(key_down<0x04)
  73   2          {
  74   3            if(key_down==0x03 && position!=2)//当按下音阶减且此时音阶不为低音段时
  75   3            {
  76   4              position++;
  77   4            }
  78   3            else if(key_down==0x02 && position!=0)//当按下音阶加且此时音阶不为高音段时
  79   3            {
  80   4              position--;
  81   4            }
  82   3            P2=position^0xff;//音阶状态送显LED模块
  83   3            switch(position)
  84   3            {
  85   4              case(0):freq_select=0;break;//低音段
  86   4              case(1):freq_select=12;break;//中音段
  87   4              case(2):freq_select=24;break;//高音段
  88   4            }
  89   3            delay(20000);//防止判定速度过快
  90   3          }
  91   2          else
  92   2          {
  93   3            switch(key_down)//修改频率选择索引
  94   3            {
  95   4              case(0x04):freq_select+=0x08;break;//Sol#
  96   4              case(0x05):freq_select+=0x09;break;//La
  97   4              case(0x06):freq_select+=0x0a;break;//La#
  98   4              case(0x07):freq_select+=0x0b;break;//Si
  99   4              case(0x08):freq_select+=0x04;break;//Mi
 100   4              case(0x09):freq_select+=0x05;break;//Fa
 101   4              case(0x0a):freq_select+=0x06;break;//Fa#
 102   4              case(0x0b):freq_select+=0x07;break;//Sol
 103   4              case(0x0c):freq_select+=0x00;break;//Do
 104   4              case(0x0d):freq_select+=0x01;break;//Do#
 105   4              case(0x0e):freq_select+=0x02;break;//Re
 106   4              case(0x0f):freq_select+=0x03;break;//Re#
 107   4            }
 108   3            EA=1;//开中断
 109   3            while(1)//按下矩阵键盘时循环
 110   3            {
 111   4              TR0=1;//启动定时器
 112   4              if(key_down!=KeyDown())//松开矩阵键盘时退出循环
 113   4              {
 114   5                TR0=0;//关闭定时器
 115   5                EA=0;//关中断
 116   5                break;
C51 COMPILER V9.54   MUSIC_KEYBOARD                                                        01/08/2024 22:40:08 PAGE 3   

 117   5              }
 118   4            } 
 119   3          }
 120   2        }
 121   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    375    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     73       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
